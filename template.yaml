AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  MyTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: MyTable
      AttributeDefinitions:
      - AttributeName: connectionId
        AttributeType: S
      KeySchema:
      - AttributeName: connectionId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  WebSocketApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: MyWebSocketApi
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"

  ConnectionRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: "$connect"
      Target: !GetAtt ConnectionIntegration.IntegrationUri

  MessageRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: "sendMessage"
      Target: !GetAtt MessageIntegration.IntegrationUri

  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: "$disconnect"
      Target: !GetAtt DisconnectIntegration.IntegrationUri

  ConnectionIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt ConnectionHandlerFunction.Arn

  MessageIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt MessageHandlerFunction.Arn

  DisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocketApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt DisconnectHandlerFunction.Arn

  ConnectionHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/connectionHandler.handler
      Runtime: nodejs18.x
      CodeUri: ./
      Policies:
      - Statement:
          Effect: Allow
          Action:
          - dynamodb:PutItem
          - dynamodb:GetItem
          - dynamodb:DeleteItem
          Resource: !GetAtt MyTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref MyTable

  MessageHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/messageHandler.handler
      Runtime: nodejs18.x
      CodeUri: ./
      Policies:
      - Statement:
          Effect: Allow
          Action:
          - dynamodb:PutItem
          - dynamodb:GetItem
          - dynamodb:DeleteItem
          Resource: !GetAtt MyTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref MyTable
          WEBSOCKET_API_ENDPOINT: !Sub "https://${WebSocketApi}.execute-api.${AWS::Region}.amazonaws.com/prod"

  DisconnectHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/disconnectHandler.handler
      Runtime: nodejs18.x
      CodeUri: ./
      Policies:
      - Statement:
          Effect: Allow
          Action:
          - dynamodb:PutItem
          - dynamodb:GetItem
          - dynamodb:DeleteItem
          Resource: !GetAtt MyTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref MyTable

  WebSocketStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref WebSocketApi
      StageName: prod
      AutoDeploy: true

  ConnectionHandlerInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ConnectionHandlerFunction
      Principal: apigateway.amazonaws.com

  MessageHandlerInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref MessageHandlerFunction
      Principal: apigateway.amazonaws.com

  DisconnectHandlerInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref DisconnectHandlerFunction
      Principal: apigateway.amazonaws.com
